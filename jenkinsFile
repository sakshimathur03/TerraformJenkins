pipeline {
    agent any

    environment {
        AZURE_CREDENTIALS_ID = 'Azure-principle'
        RESOURCE_GROUP = 'rg-jenkins-terraform'
        APP_SERVICE_NAME = 'webapijenkins3425'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sakshimathur03/TerraformJenkins.git'
            }
        }
        stage('Terraform Init') {
          steps {
           dir('Terraform') {
              bat 'terraform init'
               bat 'terraform plan -out=tfplan'
               bat 'terraform apply -auto-approve tfplan'
 }
 }
 }
    stage('Publish .NET 8 Web API') {
       steps {
          dir('WebApplication3') {
              bat 'dotnet restore'
                bat 'dotnet build --configuration Release'
                bat 'dotnet publish -c Release -o ./publish'
            }
 }
 }
 


        stage('Deploy') {
            steps {
                withCredentials([
                    azureServicePrincipal(
                        credentialsId: env.AZURE_CREDENTIALS_ID,
                        subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                        clientIdVariable: 'AZURE_CLIENT_ID',
                        clientSecretVariable: 'AZURE_CLIENT_SECRET',
                        tenantIdVariable: 'AZURE_TENANT_ID'
                    )
                ]) {
                    bat "az login --service-principal -u %AZURE_CLIENT_ID% -p %AZURE_CLIENT_SECRET% --tenant %AZURE_TENANT_ID%"
                    bat "powershell Compress-Archive -Path ./publish/* -DestinationPath ./publish.zip -Force"
                    bat "az webapp deploy --resource-group %RESOURCE_GROUP% --name %APP_SERVICE_NAME% --src-path ./publish.zip --type zip"
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment Successful!'
        }
        failure {
            echo 'Deployment Failed!'
        }
    }
}
