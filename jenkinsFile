pipeline {
    agent any

    environment {
        AZURE_CREDENTIALS_ID = 'Azure-principle'
        RESOURCE_GROUP = 'rg-jenkins-terraform'
        APP_SERVICE_NAME = 'webapijenkins3425'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sakshimathur03/TerraformJenkins.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('Terraform') {
                    bat 'terraform init'
                    bat 'terraform plan -out=tfplan'
                    bat 'terraform apply -auto-approve tfplan'
                }
            }
        }

        stage('Publish .NET 8 Web API') {
            steps {
                dir('WebApplication3') {
                    bat 'dotnet restore'
                    bat 'dotnet build --configuration Release'
                    bat 'dotnet publish -c Release -o ./publish'
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([string(credentialsId: env.AZURE_CREDENTIALS_ID, variable: 'AZURE_SECRET_JSON')]) {
                    script {
                        def json = readJSON text: AZURE_SECRET_JSON

                        def clientId = json.clientId
                        def clientSecret = json.clientSecret
                        def tenantId = json.tenantId
                        def subscriptionId = json.subscriptionId

                        bat "az login --service-principal -u ${clientId} -p ${clientSecret} --tenant ${tenantId}"
                        bat "az account set --subscription ${subscriptionId}"
                        bat "powershell Compress-Archive -Path WebApplication3/publish/* -DestinationPath publish.zip -Force"
                        bat "az webapp deploy --resource-group ${env.RESOURCE_GROUP} --name ${env.APP_SERVICE_NAME} --src-path publish.zip --type zip"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment Successful!'
        }
        failure {
            echo 'Deployment Failed!'
        }
    }
}
